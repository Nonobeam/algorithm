/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    
    public List<Integer> preorderTraversal(TreeNode root) {
        Stack<TreeNode> stack = new Stack<>();
        List<Integer> Output = new ArrayList<>();

        if (root == null){
            return Output;
        }

        TreeNode current = root;
        Output.add(current.val);

        while (current != null || !stack.isEmpty()){
            while(current != null){
                stack.push(current.right);
                stack.push(current.left);
                current = stack.pop();
                if (current != null){
                    Output.add(current.val);
                }
            }

            current = stack.pop();
            // current = stack.firstElement();
            if (current != null){
                Output.add(current.val);
            }
        }
        
        return Output;
    }


}
